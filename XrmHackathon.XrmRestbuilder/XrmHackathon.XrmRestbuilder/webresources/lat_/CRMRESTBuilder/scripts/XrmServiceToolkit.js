/// <reference path="XrmPageTemplate.js" />
/// <reference path="json2.js" />
/// <reference path="jquery.js" />

/**
* MSCRM 2011 Web Service Toolkit for JavaScript
* @author Jaimie Ji
* @author David Berry
* @current version : 2.2

* Credits:
*   The idea of this library was inspired by Daniel Cai's CrmWebServiceToolkit.
*   The idea of BusinessEntity was inspired by Daniel Cai && Ascentium CrmService JavaScript Library.
*   The REST Endpoint functions were inspired by MSCRM 2011 SDK JavaScript code and various resources from CRM websites and forums. Some of them were just copies with minor modification.
*   The Soap functions were inspired by Daniel Cai && Jamie Miley && Paul Way && Customer Effective.
*   Additional thanks to all contributors of MSCRM and i have learned a lot from you all.
* Date: February, 2012
*
* Special Thanks:
*   JetBrains ReSharper Open License
* Date: July, 2012
*
* What's new:
**********************************************************************************************************
*   Version: 1.1
*   Date: April, 2012
*       Dependency: JSON2
*       New Function - XrmServiceToolkit.Soap.Assign
*       New Function - XrmServiceToolkit.Soap.GrantAccess
*       New Function - XrmServiceToolkit.Soap.ModifyAccess
*       New Function - XrmServiceToolkit.Soap.GrantAccess
*       New Function - XrmServiceToolkit.Soap.RetrievePrincipalAccess
**********************************************************************************************************
*   Version: 1.2
*   Date: April, 2012
*       Dependency: JSON2
*       New Fix - Fix soaps functions to create/update/retrieve activities with Party List fields.
**********************************************************************************************************
*   Version: 1.3
*   Date: July, 2012
*       Dependency: JSON2, jQuery (latest or 1.7.2 above)
*       New Feature: cross browser support. jQuery Integration.
*       New Extension: A new category of functions to extend some functions:
*          1. JQueryXrmDependentOptionSet: Create Configurable Dependent Option Set to utilize CRM 2011 web resource.
*          2. JQueryXrmFieldTooltip: Create configurable tooltip for fields on CRM 2011 form
*          3. JQueryXrmCustomFilterView: Create configurable ability to add custom filter view to crm 2011 lookup field on the form
*          4. JQueryXrmFormatNotesControl: Format the notes control to allow insert, allow edit
**********************************************************************************************************
*   Version: 1.3.1
*   Date: November, 2012
*       Dependency: JSON2, jQuery (latest or 1.7.2 above)
*       New Feature - A change of logic to increase performance when returning large number of records
*       New Function - XrmServiceToolkit.Soap.QueryAll: Return all available records by query options (>5k+)
*       New Fix - XrmServiceToolkit.Rest.RetrieveMultiple not returning records more than 50
*       New Fix - XrmServiceToolkit.Soap.Business error when referring number fields like (int, double, float)     
*       New Fix - XrmServiceToolkit.Soap not handling error message properly
**********************************************************************************************************
*   Version: 1.3.2
*   Date: January, 2013
*       Dependency: JSON2, jQuery (latest or 1.7.2 above)  
*       New Fix - XrmServiceToolkit.Soap cross browser support to initialize soap service
**********************************************************************************************************
*   Version: 1.4.0 
*   Date: January, 2013
*       Dependency: JSON2, jQuery (latest or 1.7.2 above)  
*       Feature: Add Cross Browser Support for RU12
*       Tested Platform: IE9, IE10, Chrome Version 24.0.1312.56 m, Firefox 18.0.1
**********************************************************************************************************
*   Version: 1.4.1
*   Date: April, 2013
*       Dependency: JSON2, jQuery (latest or 1.7.2 above)  
*       Tested Platform: IE9, IE10, Chrome Version 26.0.1410.64 m, Firefox 20.0.1
*       Feature: Add Cross Browser Support for RU12, RU13
*       New Fix - XrmServiceToolkit.Common.AddNotification method updated for RU12, RU13, still compatible for RU11 below
*       New Fix - XrmServiceToolkit.Soap.Fetch method did not format linked record correctly
*       New Fix - XrmServiceToolkit.Soap.Retrieve method did not return partylist data for activity
*       New Fix - Added manual conversion from String to Date conversion for cross browser
*       New Fix - getServerUrl method is updated as getClientUrl to align with RU12 SDK method getClientUrl(), still compatible to support RU11 below
*       New Function - getServerUrl private method is updated as getClientUrl to align with RU12 SDK method getClientUrl(), still compatible to support RU11 below
*       New Function - XrmServiceToolkit.Soap.RetrieveAllEntitiesMetadata method is a method to return all metadata for all entities by the specified entity filters
*       New Function - XrmServiceToolkit.Soap.RetrieveEntityMetadata method is a method to return the metadata for a certain entity by the specified entity filters
*       New Function - XrmServiceToolkit.Soap.RetrieveAttributeMetadata method is a method to return the metadata for a certain entity's attribute
**********************************************************************************************************
*   Version: 1.4.2 (beta)
*   Date: May, 2013
*       Dependency: JSON2, jQuery (latest or 1.7.2 above)
*       Tested Platform: IE10
*       New Fix - XrmServiceToolkit.Soap.Fetch now takes an additional parameter, 'fetchAll', that when set to true will retrieve all pages of results
*       New Behaviour - XrmServiceToolkit.Soap.Fetch works best when providing a FetchXML string starting with the "entity" node, because of the way paging works;
*           It will still function with the traditional "fetch" node to start, but then the XML has to be parsed to select just the "entity" node, which adds some overhead.
*       New Behaviour - XrmServiceToolkit fetch and queryall methods use a unified model, and some redundant code has been removed.  This allows better paging operations.
*
**********************************************************************************************************
*   Version: 2.0.0 (beta)
*   Date: October, 2013
*       Dependency: JSON2, jQuery (latest or 1.7.2 above)
*       ---NOTE---Due to the changes for CRM 2013, please use the attached version of JSON2 and jQuery
*       Tested Platform: IE10, latest Chrome, latest FireFox
*    Changes:
*       New Behaviour - XrmServiceTookit.Soap.Fetch parameters change to work with asynchronous callback compared to 1.4.2 beta: XrmServiceToolkit.Soap.Fetch(fetchXml, fetchAll, callback)
*       New Behaviour - XrmServiceTookit.Soap.AddNotification is working with CRM 2013 using the out-of-box functionality. Still support CRM 2011
*       New Fix - XrmServiceToolkit.Common.GetObjectCodeType is now using metadata retrieval as a supported method
*       New Fix - The included jQuery has a line changed at the bottom <window.jQuery = jQuery;> $ is removed to work with CRM 2013 form
*   Beta Release for CRM 2013
**********************************************************************************************************
*   Version: 2.0.1 (beta)
*   Date: April, 2014
*       Dependency: JSON2, jQuery (latest or 1.7.2 above)
*       ---NOTE---Due to the changes for CRM 2013, please use the attached version of JSON2 and jQuery
*       Tested Platform: IE11, IE10, latest Chrome, latest FireFox
*    Changes:
*       New Behaviour - XrmServiceTookit.Soap.Fetch method will allow 'page' and 'count' parameter to limit the returned records.
*       New Fix - XrmServiceToolkit.Soap.Fetch fix an error when passing difference formats of Fetch XML with/without '<fetch>..' statements
*       New Fix - XrmServiceToolkit.Extension methods error when retrieving web resources
*   Beta Release for CRM 2013
**********************************************************************************************************
*   Version: 2.1
*   Date: September, 2014
*       Dependency: JSON2, jQuery (latest or 1.7.2 above)
*       ---NOTE---Due to the changes for CRM 2013, please use the attached version of JSON2 and jQuery
*       Tested Platform: IE11, IE10, latest Chrome, latest FireFox
*    Changes:
*       Performance Refactor
*       New Fix - XrmServiceToolkit.Common.DisableAllControlsInTab to support CRM2013 changes
*   Beta Release for CRM 2013
**********************************************************************************************************
*   Version: 2.2
*   Date: April, 2015
*       Dependency: JSON2, jQuery (latest or 1.7.2 above)
*       ---NOTE---Due to the changes for CRM 2013, please use the attached version of JSON2 and jQuery
*       Tested Platform: IE11, IE10, latest Chrome, latest FireFox
*    Changes:
*       CRM 2015 release
*       New Fix - Error Handling
*       New Fix - XrmServiceToolkit.Soap.Fetch aggregate fix
*       New Fix - XrmServiceToolkit.Soap.Fetch distinct support
*       New Fix - Aliased Values Handling
*   Beta Release for CRM 2013
**********************************************************************************************************
*/
XrmServiceToolkit = function () { }, XrmServiceToolkit.Common = function () { var a = function (a) { void 0 !== Xrm.Utility && void 0 !== Xrm.Utility.alertDialog ? Xrm.Utility.alertDialog(a) : alert(a) }, b = function (a, b) { var c; return c = null !== a && null !== b && void 0 !== a && void 0 !== b && a.replace(/[{}]/g, "").toLowerCase() === b.replace(/[{}]/g, "").toLowerCase() }, c = function (a) { Xrm.Page.getControl(a).setDisabled(!1) }, d = function (a) { Xrm.Page.getControl(a).setDisabled(!0) }, e = function (a) { Xrm.Page.getControl(a).setVisible(!0) }, f = function (a) { Xrm.Page.getControl(a).setVisible(!1) }, g = function (a, b) { Xrm.Page.getAttribute(a).setRequiredLevel(b) }, h = function (b) { a(b.message) }, i = function (a) { try { var b = XrmServiceToolkit.Soap.RetrieveEntityMetadata("Entity", a, !1); return b && 1 === b.length ? b[0].ObjectTypeCode : null } catch (a) { return h(a.message), null } }, j = function (b, c, d) { if (void 0 !== Xrm.Page.ui.setFormNotification) if (d) Xrm.Page.ui.clearFormNotification(d), 1 === c && Xrm.Page.ui.setFormNotification(b, "ERROR", d), 2 === c && Xrm.Page.ui.setFormNotification(b, "INFO", d), 3 === c && Xrm.Page.ui.setFormNotification(b, "WARNING", d); else { var e = "formNotification00"; Xrm.Page.ui.clearFormNotification(e), 1 === c && Xrm.Page.ui.setFormNotification(b, "ERROR", e), 2 === c && Xrm.Page.ui.setFormNotification(b, "INFO", e), 3 === c && Xrm.Page.ui.setFormNotification(b, "WARNING", e) } else { var f = document.getElementById("crmNotifications"); if (null === f || void 0 === f) return void a("Cannot find the notification area"); if ("undefined" != typeof f.AddNotification && "undefined" != typeof f.control.AddNotification) return void a("Add Notification is no longer supported"); 1 === c && ("undefined" != typeof f.AddNotification ? f.AddNotification("mep1", 1, "source", b) : "undefined" != typeof f.control.AddNotification && f.control.AddNotification("mep1", 1, "source", b)), 2 === c && ("undefined" != typeof f.AddNotification ? f.AddNotification("mep3", 3, "source", b) : "undefined" != typeof f.control.AddNotification && f.control.AddNotification("mep3", 3, "source", b)), 3 === c && ("undefined" != typeof f.AddNotification ? f.AddNotification("mep2", 2, "source", b) : "undefined" != typeof f.control.AddNotification && f.control.AddNotification("mep2", 2, "source", b)), "" === b && ("undefined" != typeof f.SetNotifications ? f.SetNotifications(null, null) : "undefined" != typeof f.control.SetNotifications ? f.control.SetNotifications(null, null) : a("Set Notification is no longer supported")) } }, k = function (a, b) { void 0 !== Xrm.Page.getControl(a).setNotification && Xrm.Page.getControl(a).setNotification(b) }, l = function (a, b) { var c = 864e5, d = a.getTime(), e = b.getTime(), f = Math.abs(d - e); return Math.round(f / c) }, m = function (a) { var b = Xrm.Page.ui.tabs.get(a); null != b && Xrm.Page.ui.controls.forEach(function (a) { null !== a.getParent() && null != a.getParent().getParent() && a.getParent().getParent() === b && "subgrid" !== a.getControlType() && a.setDisabled(!0) }) }, n = function (a) { for (var b = Xrm.Page.ui.tabs, c = 0, d = b.getLength() ; c < d; c++) for (var e = b.get(c), f = e.sections, g = 0, h = f.getLength() ; g < h; g++) { var i = f.get(g); if (i.getLabel().toLowerCase() === a.toLowerCase()) { Xrm.Page.ui.controls.forEach(function (b) { null !== b.getParent() && b.getParent().getLabel() === a && "subgrid" !== b.getControlType() && b.setDisabled(!0) }); break } } }; return { EnableField: c, DisableField: d, ShowField: e, HideField: f, UpdateRequiredLevel: g, GetObjectTypeCode: i, CalculateDaysBetween: l, AddNotification: j, AddControlNotification: k, ShowError: h, GuidsAreEqual: b, DisableAllControlsInTab: m, DisableAllControlsInSection: n } }(), XrmServiceToolkit.Rest = function () { var a = function (a) { void 0 !== Xrm.Utility && void 0 !== Xrm.Utility.alertDialog ? Xrm.Utility.alertDialog(a) : alert(a) }, f = function () { var a; if ("undefined" != typeof window.GetGlobalContext) a = window.GetGlobalContext(); else if ("undefined" != typeof GetGlobalContext) a = GetGlobalContext(); else if ("undefined" != typeof Xrm) a = Xrm.Page.context; else { if ("undefined" == typeof window.parent.Xrm) throw new Error("Context is not available."); a = window.parent.Xrm.Page.context } return a }, g = function () { var a = "undefined" != typeof f().getClientUrl ? f().getClientUrl() : f().getServerUrl(); return a.match(/\/$/) && (a = a.substring(0, a.length - 1)), a }, h = function () { return g() + "/XRMServices/2011/OrganizationData.svc/" }, i = function (a) { throw new Error("Error : " + a.status + ": " + a.statusText + ": " + JSON.parse(a.responseText).error.message.value) }, j = function (a, b) { var c; return "string" == typeof b && (c = /Date\(([-+]?\d+)\)/.exec(b)) ? new Date(parseInt(b.replace("/Date(", "").replace(")/", ""), 10)) : b }, k = function (a, b) { if ("undefined" == typeof a || null === a) throw new Error(b) }, l = function (a, b) { if ("string" != typeof a) throw new Error(b) }, m = function (a, b) { if ("function" != typeof a) throw new Error(b) }, n = function (a, b) { if ("boolean" != typeof a) throw new Error(b) }, o = function () { if (XMLHttpRequest) return new XMLHttpRequest; try { return new ActiveXObject("MSXML2.XMLHTTP.6.0") } catch (b) { try { return new ActiveXObject("MSXML2.XMLHTTP.3.0") } catch (b) { return a("This browser is not AJAX enabled."), null } } }, p = function (a, b, c, d, e) { k(a, "XrmServiceToolkit.REST.createRecord requires the object parameter."), l(b, "XrmServiceToolkit.REST.createRecord requires the type parameter is a string."), m(c, "XrmServiceToolkit.REST.createRecord requires the successCallback is a function."), m(d, "XrmServiceToolkit.REST.createRecord requires the errorCallback is a function."), n(e, "XrmServiceToolkit.REST.createRecord requires the async is a boolean."); var f = o(); f.open("POST", h() + b, e), f.setRequestHeader("Accept", "application/json"), f.setRequestHeader("Content-Type", "application/json; charset=utf-8"), e ? (f.onreadystatechange = function () { 4 === this.readyState && (f.onreadystatechange = null, 201 === f.status ? c(JSON.parse(f.responseText, j).d) : d(i(f))) }, f.send(JSON.stringify(a))) : (f.send(JSON.stringify(a)), 201 === f.status ? c(JSON.parse(f.responseText, j).d) : d(i(f))) }, q = function (a, b, c, d, e, f, g) { l(a, "XrmServiceToolkit.REST.retrieveRecord requires the id parameter is a string."), l(b, "XrmServiceToolkit.REST.retrieveRecord requires the type parameter is a string."), null != c && l(c, "XrmServiceToolkit.REST.retrieveRecord requires the select parameter is a string."), null != d && l(d, "XrmServiceToolkit.REST.retrieveRecord requires the expand parameter is a string."), m(e, "XrmServiceToolkit.REST.retrieveRecord requires the successCallback parameter is a function."), m(f, "XrmServiceToolkit.REST.retrieveRecord requires the errorCallback parameter is a function."), n(g, "XrmServiceToolkit.REST.retrieveRecord requires the async parameter is a boolean."); var k = ""; if (null != c || null != d) { if (k = "?", null != c) { var p = "$select=" + c; null != d && (p = p + "," + d), k += p } null != d && (k = k + "&$expand=" + d) } var q = o(); q.open("GET", h() + b + "(guid'" + a + "')" + k, g), q.setRequestHeader("Accept", "application/json"), q.setRequestHeader("Content-Type", "application/json; charset=utf-8"), g ? (q.onreadystatechange = function () { 4 === q.readyState && (200 === q.status ? e(JSON.parse(q.responseText, j).d) : f(i(q))) }, q.send()) : (q.send(), 200 === q.status ? e(JSON.parse(q.responseText, j).d) : f(i(q))) }, r = function (a, b, c, d, e, f) { l(a, "XrmServiceToolkit.REST.updateRecord requires the id parameter."), k(b, "XrmServiceToolkit.REST.updateRecord requires the object parameter."), l(c, "XrmServiceToolkit.REST.updateRecord requires the type parameter."), m(d, "XrmServiceToolkit.REST.updateRecord requires the successCallback is a function."), m(e, "XrmServiceToolkit.REST.updateRecord requires the errorCallback is a function."), n(f, "XrmServiceToolkit.REST.updateRecord requires the async parameter is a boolean."); var g = o(); g.open("POST", h() + c + "(guid'" + a + "')", f), g.setRequestHeader("Accept", "application/json"), g.setRequestHeader("Content-Type", "application/json; charset=utf-8"), g.setRequestHeader("X-HTTP-Method", "MERGE"), f ? (g.onreadystatechange = function () { 4 === g.readyState && (204 === g.status || 1223 === g.status ? d() : e(i(g))) }, g.send(JSON.stringify(b))) : (g.send(JSON.stringify(b)), 204 === g.status || 1223 === g.status ? d() : e(i(g))) }, s = function (a, b, c, d, e) { l(a, "XrmServiceToolkit.REST.deleteRecord requires the id parameter."), l(b, "XrmServiceToolkit.REST.deleteRecord requires the type parameter."), m(c, "XrmServiceToolkit.REST.deleteRecord requires the successCallback is a function."), m(d, "XrmServiceToolkit.REST.deleteRecord requires the errorCallback is a function."), n(e, "XrmServiceToolkit.REST.deleteRecord requires the async parameter is a boolean."); var f = o(); f.open("POST", h() + b + "(guid'" + a + "')", e), f.setRequestHeader("Accept", "application/json"), f.setRequestHeader("Content-Type", "application/json; charset=utf-8"), f.setRequestHeader("X-HTTP-Method", "DELETE"), e ? (f.onreadystatechange = function () { 4 === f.readyState && (204 === f.status || 1223 === f.status ? c() : d(i(f))) }, f.send()) : (f.send(), 204 === f.status || 1223 === f.status ? c() : d(i(f))) }, t = function (a, b, c, d, e, f) { l(a, "XrmServiceToolkit.REST.retrieveMultipleRecords requires the type parameter is a string."), null != b && l(b, "XrmServiceToolkit.REST.retrieveMultipleRecords requires the options parameter is a string."), m(c, "XrmServiceToolkit.REST.retrieveMultipleRecords requires the successCallback parameter is a function."), m(d, "XrmServiceToolkit.REST.retrieveMultipleRecords requires the errorCallback parameter is a function."), m(e, "XrmServiceToolkit.REST.retrieveMultipleRecords requires the OnComplete parameter is a function."), n(f, "XrmServiceToolkit.REST.retrieveMultipleRecords requires the async parameter is a boolean."); var g = ""; null != b && (g = "?" !== b.charAt(0) ? "?" + b : b); var k = o(); if (k.open("GET", h() + a + g, f), k.setRequestHeader("Accept", "application/json"), k.setRequestHeader("Content-Type", "application/json; charset=utf-8"), f) k.onreadystatechange = function () { if (4 === k.readyState) if (200 === k.status) { var b = JSON.parse(k.responseText, j).d; if (c(b.results), null == b.__next) e(); else { var g = b.__next.substring((h() + a).length); t(a, g, c, d, e, f) } } else d(i(k)) }, k.send(); else if (k.send(), 200 === k.status) { var p = JSON.parse(k.responseText, j).d; if (c(p.results), null == p.__next) e(); else { var q = p.__next.substring((h() + a).length); t(a, q, c, d, e, f) } } else d(i(k)) }, u = function (a) { k(a, "The value passed to the performRequest function settings parameter is null or undefined."); var b = o(); b.open(a.type, a.url, a.async), b.setRequestHeader("Accept", "application/json"), null != a.action && b.setRequestHeader("X-HTTP-Method", a.action), b.setRequestHeader("Content-Type", "application/json; charset=utf-8"), a.async ? (b.onreadystatechange = function () { 4 === b.readyState && (204 === b.status || 1223 === b.status || 201 === b.status ? a.success(b) : a.error ? a.error(i(b)) : i(b)) }, "undefined" == typeof a.data ? b.send() : b.send(a.data)) : ("undefined" == typeof a.data ? b.send() : b.send(a.data), 204 === b.status || 1223 === b.status || 201 === b.status ? a.success(b) : a.error ? a.error(i(b)) : i(b)) }, v = function (a, b, c, d, e, f, g, i) { k(a, "XrmServiceToolkit.REST.associateRecord requires the entityid1 parameter."), k(b, "XrmServiceToolkit.REST.associateRecord requires the odataSetName1 parameter."), k(c, "XrmServiceToolkit.REST.associateRecord requires the entityid2 parameter."), k(d, "XrmServiceToolkit.REST.associateRecord requires the odataSetName2 parameter."), k(e, "XrmServiceToolkit.REST.associateRecord requires the relationship parameter."), m(f, "XrmServiceToolkit.REST.associateRecord requires the successCallback is a function."), m(g, "XrmServiceToolkit.REST.associateRecord requires the errorCallback is a function."), n(i, "XrmServiceToolkit.REST.associateRecord requires the async parameter is a boolean"); var j = {}; j.uri = h() + "/" + d + "(guid'" + c + "')"; var l = window.JSON.stringify(j); u({ type: "POST", url: h() + "/" + b + "(guid'" + a + "')/$links/" + e, data: l, success: f, error: g, async: i }) }, w = function (a, b, c, d, e, f, g) { k(a, "XrmServiceToolkit.REST.disassociateRecord requires the entityid1 parameter."), k(b, "XrmServiceToolkit.REST.disassociateRecord requires the odataSetName parameter."), k(c, "XrmServiceToolkit.REST.disassociateRecord requires the entityid2 parameter."), k(d, "XrmServiceToolkit.REST.disassociateRecord requires the relationship parameter."), m(e, "XrmServiceToolkit.REST.disassociateRecord requires the successCallback is a function."), m(f, "XrmServiceToolkit.REST.disassociateRecord requires the errorCallback is a function."), n(g, "XrmServiceToolkit.REST.disassociateRecord requires the async parameter is a boolean."); var i = h() + "/" + b + "(guid'" + a + "')/$links/" + d + "(guid'" + c + "')"; u({ url: i, type: "POST", action: "DELETE", error: f, success: e, async: g }) }; return { Create: p, Retrieve: q, Update: r, Delete: s, RetrieveMultiple: t, Associate: v, Disassociate: w } }(), XrmServiceToolkit.Soap = function () {
	var a = function (a) { void 0 !== Xrm.Utility && void 0 !== Xrm.Utility.alertDialog ? Xrm.Utility.alertDialog(a) : alert(a) }, b = function (a) { if (null === a || "" === a || void 0 === a) return a; for (var b = 0, c = "", d = "", e = 0, f = a.length; e < f; e++) { var g = a.charCodeAt(e); c += g > 96 && g < 123 || g > 64 && g < 91 || 32 === g || g > 47 && g < 58 || 46 === g || 44 === g || 45 === g || 95 === g ? String.fromCharCode(g) : "&#" + g + ";", 500 === ++b && (d += c, c = "", b = 0) } return c.length && (d += c), d }, c = function (a) { var d, e, f, c = ""; for (e = 0, f = a.length; e < f; e++) if (d = a.charCodeAt(e), d >= 55296 && d <= 57343) if (e + 1 < a.length) { var g = a.charCodeAt(e + 1); g >= 56320 && g <= 57343 ? (c += "CRMEntityReferenceOpen" + (1024 * (d - 55296) + (1023 & g) + 65536).toString(16) + "CRMEntityReferenceClose", e++) : c += String.fromCharCode(d) } else c += String.fromCharCode(d); else c += String.fromCharCode(d); for (a = c, c = "", e = 0, f = a.length; e < f; e++) d = a.charCodeAt(e), c += d >= 55296 && d <= 57343 ? String.fromCharCode(65533) : String.fromCharCode(d); return a = c, a = b(a), a = a.replace(/CRMEntityReferenceOpen/g, "&#x"), a = a.replace(/CRMEntityReferenceClose/g, ";") }, d = function (a) { return "undefined" == typeof a || "unknown" == typeof a || null === a ? a : ("string" != typeof a && (a = a.toString()), c(a)) }, e = function (a) { return "string" != typeof a && (a = a.toString()), a }, f = function (a, b) { for (b = b || 2, a = "" + a; a.length < b;) a = "0" + a; return a }, g = function (a) { return a.getFullYear() + "-" + f(a.getMonth() + 1) + "-" + f(a.getDate()) + "T" + f(a.getHours()) + ":" + f(a.getMinutes()) + ":" + f(a.getSeconds()) }, h = function (a) { return "string" == typeof a && "{" === a.slice(0, 1) && "}" === a.slice(-1) && (a = a.slice(1, -1)), "object" == typeof a && a.getTime ? g(a) : d(a) }, i = function () { var a; if ("undefined" != typeof window.GetGlobalContext) a = window.GetGlobalContext(); else if ("undefined" != typeof GetGlobalContext) a = GetGlobalContext(); else if ("undefined" != typeof Xrm) a = Xrm.Page.context; else { if ("undefined" == typeof window.parent.Xrm) throw new Error("Context is not available."); a = window.parent.Xrm.Page.context } return a }, j = function () { var a = "undefined" != typeof i().getClientUrl ? i().getClientUrl() : i().getServerUrl(); return a.match(/\/$/) && (a = a.substring(0, a.length - 1)), a }, k = function () { return j() + "/XRMServices/2011/Organization.svc/web" }, m = function (a, b) { this.type = a, this.value = b }, n = function (a, b, c) { this.id = a, this.logicalName = b, this.name = c, this.type = "EntityReference" }, o = function (a) { this.value = a, this.type = "EntityCollection" }, p = function (a, b) { this.value = a, this.formattedValue = b, this.type = "OptionSetValue" }, q = function (a, b) { this.id = b ? b : "00000000-0000-0000-0000-000000000000", this.logicalName = a, this.attributes = new Object }, r = function (a) { var b = a.split(/\D/); return new Date(Date.UTC(b[0], --b[1], b[2], b[3], b[4], b[5])) }, s = function (a) { var b = { s: "http://schemas.xmlsoap.org/soap/envelope/", a: "http://schemas.microsoft.com/xrm/2011/Contracts", i: "http://www.w3.org/2001/XMLSchema-instance", b: "http://schemas.datacontract.org/2004/07/System.Collections.Generic", c: "http://schemas.microsoft.com/xrm/2011/Metadata", ser: "http://schemas.microsoft.com/xrm/2011/Contracts/Services" }; return b[a] || null }, t = function (a) { return null == a || null != a.attributes.getNamedItem("i:nil") && "true" === a.attributes.getNamedItem("i:nil").value }, u = function (a, b) { if ("undefined" != typeof a.selectNodes) return a.selectNodes(b); for (var c = [], d = a.evaluate(b, a, s, XPathResult.ANY_TYPE, null), e = d.iterateNext() ; e;) c.push(e), e = d.iterateNext(); return c }, v = function (a, b) { if ("undefined" != typeof a.selectSingleNode) return a.selectSingleNode(b); var c = new XPathEvaluator, d = c.evaluate(b, a, s, XPathResult.FIRST_ORDERED_NODE_TYPE, null); return d.singleNodeValue }, w = function (a, b) { var c = v(a, b); return t(c) ? null : "undefined" != typeof c.text ? c.text : c.textContent }, x = function (a) { return "undefined" != typeof a.text ? a.text : a.textContent }, y = function (a) { var b = ["xmlns:s='http://schemas.xmlsoap.org/soap/envelope/'", "xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'", "xmlns:i='http://www.w3.org/2001/XMLSchema-instance'", "xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'", "xmlns:c='http://schemas.microsoft.com/xrm/2011/Metadata'", "xmlns:ser='http://schemas.microsoft.com/xrm/2011/Contracts/Services'"]; a.setProperty("SelectionNamespaces", b.join(" ")) }, z = function (b) { var c = null; try { c = new ActiveXObject("Microsoft.XMLDOM"), c.async = !1, c.loadXML(b) } catch (e) { if (window.DOMParser) { var d = new DOMParser; c = d.parseFromString(b, "text/xml") } else a("Cannot convert the XML string to a cross-browser XML object.") } return c }, A = function (b) { var c = ""; try { null != b && ("undefined" != typeof XMLSerializer && "undefined" == typeof b.xml ? c = (new XMLSerializer).serializeToString(b) : "undefined" != typeof b.xml ? c = b.xml : "undefined" != typeof b[0].xml && (c = b[0].xml)) } catch (b) { a("Cannot convert the XML to a string.") } return c }; q.prototype = { serialize: function () { var a = ["<b:value i:type='a:Entity'>"]; a.push('<a:Attributes xmlns:b="http://schemas.datacontract.org/2004/07/System.Collections.Generic">'); var b = this.attributes; for (var c in b) if (b.hasOwnProperty(c)) { var e = b[c]; if (a.push("<a:KeyValuePairOfstringanyType>"), a.push("<b:key>", c, "</b:key>"), null === e || null === e.value) a.push("<b:value i:nil='true' />"); else { var g, i, j, k, l, m, f = e.type ? d(e.type) : typeof e; switch (f) { case "OptionSetValue": g = e.hasOwnProperty("value") ? e.value : e, i = h(g), a.push("<b:value i:type='a:OptionSetValue'>"), a.push("<a:Value>", i, "</a:Value>", "</b:value>"); break; case "EntityCollection": a.push("<b:value i:type='a:EntityCollection'>"), a.push("<a:Entities>"), g = e.hasOwnProperty("value") ? e.value : e; for (var n = N(g) ? g : [g], o = 0, p = n.length; o < p; o++) { var q = n[o]; j = q.hasOwnProperty("id") ? q.id : q, k = h(j), l = q.hasOwnProperty("logicalName") ? q.logicalName : q, m = h(l), a.push("<a:Entity>"), a.push("<a:Attributes>"), a.push("<a:KeyValuePairOfstringanyType>"), a.push("<b:key>partyid</b:key>"), a.push("<b:value i:type='a:EntityReference'>"), a.push("<a:Id>", k, "</a:Id>"), a.push("<a:LogicalName>", m, "</a:LogicalName>"), a.push("<a:Name i:nil='true' />"), a.push("</b:value>"), a.push("</a:KeyValuePairOfstringanyType>"), a.push("</a:Attributes>"), a.push("<a:EntityState i:nil='true' />"), a.push("<a:FormattedValues />"), a.push("<a:Id>00000000-0000-0000-0000-000000000000</a:Id>"), a.push("<a:LogicalName>activityparty</a:LogicalName>"), a.push("<a:RelatedEntities />"), a.push("</a:Entity>") } a.push("</a:Entities>"), a.push("<a:EntityName i:nil='true' />"), a.push("<a:MinActiveRowVersion i:nil='true' />"), a.push("<a:MoreRecords>false</a:MoreRecords>"), a.push("<a:PagingCookie i:nil='true' />"), a.push("<a:TotalRecordCount>0</a:TotalRecordCount>"), a.push("<a:TotalRecordCountLimitExceeded>false</a:TotalRecordCountLimitExceeded>"), a.push("</b:value>"); break; case "EntityReference": j = e.hasOwnProperty("id") ? e.id : e, k = h(j), l = e.hasOwnProperty("logicalName") ? e.logicalName : e, m = h(l), a.push("<b:value i:type='a:EntityReference'>"), a.push("<a:Id>", k, "</a:Id>"), a.push("<a:LogicalName>", m, "</a:LogicalName>"), a.push("<a:Name i:nil='true' />", "</b:value>"); break; case "Money": g = e.hasOwnProperty("value") ? e.value : e, i = h(g), a.push("<b:value i:type='a:Money'>"), a.push("<a:Value>", i, "</a:Value>", "</b:value>"); break; case "guid": g = e.hasOwnProperty("value") ? e.value : e, i = h(g), a.push("<b:value i:type='c:guid' xmlns:c='http://schemas.microsoft.com/2003/10/Serialization/'>"), a.push(i, "</b:value>"); break; case "number": g = e.hasOwnProperty("value") ? e.value : e, i = h(g); var r = parseInt(i) === i ? "c:int" : "c:decimal"; a.push("<b:value i:type='", r, "' xmlns:c='http://www.w3.org/2001/XMLSchema'>"), a.push(i, "</b:value>"); break; default: g = e.hasOwnProperty("value") ? e.value : e, i = h(g), f = "object" == typeof g && g.getTime ? "dateTime" : f, a.push("<b:value i:type='c:", f, "' xmlns:c='http://www.w3.org/2001/XMLSchema'>", i, "</b:value>") } } a.push("</a:KeyValuePairOfstringanyType>") } return a.push("</a:Attributes><a:EntityState i:nil='true' />"), a.push("<a:FormattedValues xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic' />"), a.push("<a:Id>", h(this.id), "</a:Id>"), a.push("<a:LogicalName>", this.logicalName, "</a:LogicalName>"), a.push("<a:RelatedEntities xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic' />"), a.push("</b:value>"), a.join("") }, deserialize: function (a) { for (var b = new Object, c = a.childNodes, d = 0, e = c.length; d < e; d++) { var f, g = c[d]; switch (g.nodeName) { case "a:Attributes": for (var h = g, i = 0, j = h.childNodes.length; i < j; i++) { var k = h.childNodes[i], l = k.childNodes; f = x(l[0]); var q = l[1], s = q.attributes.getNamedItem("i:type").value; if ("AliasedValue" === s.replace("c:", "").replace("a:", "")) { var t = q.childNodes[2]; s = t.attributes.getNamedItem("i:type").value, q = t } var u, v; switch (s) { case "a:OptionSetValue": var w = new p; w.type = s.replace("a:", ""), w.value = parseInt(x(q)), b[f] = w; break; case "a:EntityReference": u = new n, u.type = s.replace("a:", ""); var y = q.childNodes; u.id = x(y[0]), u.logicalName = x(y[1]), u.name = x(y[2]), b[f] = u; break; case "a:EntityCollection": u = new o, u.type = s.replace("a:", ""); for (var z = [], A = q.childNodes, B = 0, C = A[0].childNodes.length; B < C; B++) for (var D = k.childNodes[1].childNodes[0].childNodes[B].childNodes[0].childNodes, E = 0, F = D.length; E < F; E++) { var G = D[E].childNodes, H = x(G[0]); if ("partyid" === H) { var I = new n; I.id = x(G[1].childNodes[0]), I.logicalName = x(G[1].childNodes[1]), I.name = x(G[1].childNodes[2]), z[B] = I } } u.value = z, b[f] = u; break; case "a:Money": v = new m, v.type = s.replace("a:", ""), v.value = parseFloat(x(q)), b[f] = v; break; default: v = new m, v.type = s.replace("c:", "").replace("a:", ""), "int" === v.type ? v.value = parseInt(x(q)) : "decimal" === v.type || "double" === v.type ? v.value = parseFloat(x(q)) : "dateTime" === v.type ? v.value = r(x(q)) : "boolean" === v.type ? v.value = "false" !== x(q) : v.value = x(q), b[f] = v } } this.attributes = b; break; case "a:Id": this.id = x(g); break; case "a:LogicalName": this.logicalName = x(g); break; case "a:FormattedValues": for (var J = g, K = 0, L = J.childNodes.length; K < L; K++) { var M = J.childNodes[K]; f = x(M.childNodes[0]), this.attributes[f].formattedValue = x(M.childNodes[1]), isNaN(this.attributes[f].value) && "dateTime" === this.attributes[f].type && (this.attributes[f].value = new Date(this.attributes[f].formattedValue)) } } } } }; var B = function (a) { if (12029 === a.status) throw new Error("The attempt to connect to the server failed."); if (12007 === a.status) throw new Error("The server name could not be resolved."); var b = a.responseXML, c = "Unknown (unable to parse the fault)"; if (null !== b && "object" == typeof b) for (var d = null, e = null, f = b.firstChild.firstChild, g = 0; g < f.childNodes.length; g++) { var h = f.childNodes[g]; if ("s:Fault" === h.nodeName) { for (var i = 0; i < h.childNodes.length; i++) { var j = h.childNodes[i]; if ("faultstring" === j.nodeName && (d = x(j)), "detail" === j.nodeName) for (var k = 0; k < j.childNodes.length; k++) { var l = j.childNodes[k]; if ("OrganizationServiceFault" === l.nodeName) for (var m = 0; m < l.childNodes.length; m++) { var n = l.childNodes[m]; if ("ErrorCode" === n.nodeName) { e = x(n); break } } } } break } } throw null != e && null != d ? c = "Error Code:" + e + " Message: " + d : null != d && (c = d), new Error(c) }, C = function (a, b, c, d) { c = c || !1; var e = ["<soap:Envelope xmlns:soap='http://schemas.xmlsoap.org/soap/envelope/'>", "<soap:Body>", "<", b, " xmlns='http://schemas.microsoft.com/xrm/2011/Contracts/Services' xmlns:i='http://www.w3.org/2001/XMLSchema-instance'>", a, "</", b, ">", "</soap:Body>", "</soap:Envelope>"].join(""), f = new XMLHttpRequest; f.open("POST", k(), c), f.setRequestHeader("Accept", "application/xml, text/xml, */*"), f.setRequestHeader("Content-Type", "text/xml; charset=utf-8"), f.setRequestHeader("SOAPAction", "http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/" + b); try { f.responseType = "msxml-document" } catch (a) { } if (c) f.onreadystatechange = function () { if (4 === f.readyState) if (f.onreadystatechange = null, 200 === f.status) { var a = f.responseXML; try { y(a) } catch (a) { } d(a) } else B(f) }, f.send(e); else { if (f.send(e), 200 === f.status) { var g = f.responseXML; try { y(g) } catch (a) { } var h = g; return d ? d(h) : h } B(f) } }, D = function (a, b) { var c = a.serialize(), d = !!b, f = ["<request i:type='a:CreateRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'>", "<a:Parameters xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<b:key>Target</b:key>", c, "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true' />", "<a:RequestName>Create</a:RequestName>", "</request>"].join(""); return C(f, "Execute", d, function (a) { var c = w(a, "//b:value"), f = e(c); return d ? void b(f) : f }) }, E = function (a, b) { var c = a.serialize(), d = !!b, f = ["<request i:type='a:UpdateRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'>", "<a:Parameters xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<b:key>Target</b:key>", c, "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true' />", "<a:RequestName>Update</a:RequestName>", "</request>"].join(""); return C(f, "Execute", d, function (a) { var c = w(a, "//a:Results"), f = e(c); return d ? void b(f) : f }) }, F = function (a, b, c) { var d = ["<request i:type='a:DeleteRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'><a:Parameters xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'><a:KeyValuePairOfstringanyType><b:key>Target</b:key><b:value i:type='a:EntityReference'><a:Id>", b, "</a:Id><a:LogicalName>", a, "</a:LogicalName><a:Name i:nil='true' /></b:value></a:KeyValuePairOfstringanyType></a:Parameters><a:RequestId i:nil='true' /><a:RequestName>Delete</a:RequestName></request>"].join(""), f = !!c; return C(d, "Execute", f, function (a) { var b = w(a, "//a:Results"), d = e(b); return f ? void c(d) : d }) }, G = function (a, b) { var c = !!b; return C(a, "Execute", c, function (a) { return c ? void b(a) : a }) }, H = function (a, b, c, e) { var f = ["<fetch mapping='logical' page='" + b + "' count='5000' paging-cookie='" + c + "'>", a.replace(/\"/g, "'"), "</fetch>"].join(""), g = ["<request i:type='a:RetrieveMultipleRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'>", "<a:Parameters xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<b:key>Query</b:key>", "<b:value i:type='a:FetchExpression'>", "<a:Query>", d(f), "</a:Query>", "</b:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true'/>", "<a:RequestName>RetrieveMultiple</a:RequestName>", "</request>"].join(""); return C(g, "Execute", !1, function (c) { for (var d = v(c, "//a:Entities"), f = "true" === w(c, "//a:MoreRecords"), g = 0, h = d.childNodes.length; g < h; g++) { var i = new q; i.deserialize(d.childNodes[g]), e.push(i) } if (!f) return e; b += 1; var j = w(c, "//a:PagingCookie").replace(/\"/g, "'").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/'/g, "&quot;"); H(a, b, j, e) }) }, I = function (a, b, c) { var e = a; if ("<entity" === a.slice(0, 7)) e = ["<fetch mapping='logical'>", a.replace(/\"/g, "'"), "</fetch>"].join(""); else { var f = a.indexOf("aggregate=") !== -1, g = a.indexOf("page='1'") !== -1 && a.indexOf("count='") !== -1, h = a.indexOf("distinct="), i = h !== -1, j = a.substring(h + 9, h + 10), k = i ? a.substring(a.indexOf("distinct=") + 10, a.indexOf(j, a.indexOf("distinct=") + 10)) : "false", l = z(a), m = v(l, "//entity"); if (null === m) throw new Error("XrmServiceToolkit.Fetch: No 'entity' node in the provided FetchXML."); var n = m; try { a = A(n).replace(/\"/g, "'") } catch (b) { if (void 0 === n || !n.xml) throw new Error("XrmServiceToolkit.Fetch: This client does not provide the necessary XML features to continue."); a = n.xml.replace(/\"/g, "'") } f || g || (e = ["<fetch mapping='logical' distinct='" + (i ? k : "false") + "' >", a, "</fetch>"].join("")) } var o = ["<request i:type='a:RetrieveMultipleRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'>", "<a:Parameters xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<b:key>Query</b:key>", "<b:value i:type='a:FetchExpression'>", "<a:Query>", d(e), "</a:Query>", "</b:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true'/>", "<a:RequestName>RetrieveMultiple</a:RequestName>", "</request>"].join(""), p = !!c; return C(o, "Execute", p, function (d) { var e = v(d, "//a:Entities"), f = "true" === w(d, "//a:MoreRecords"), g = []; if (null != e) { for (var h = 0, i = e.childNodes.length; h < i; h++) { var j = new q; j.deserialize(e.childNodes[h]), g.push(j) } if (b && f) { var k = w(d, "//a:PagingCookie").replace(/\"/g, "'").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/'/g, "&quot;"); H(a, 2, k, g) } if (!p) return g; c(g) } }) }, J = function (a, b, c, d) { var e = "", f = ""; if (null != c) { for (var g = 0, i = c.length; g < i; g++) e += "<c:string>" + c[g] + "</c:string>"; f = "<a:AllColumns>false</a:AllColumns><a:Columns xmlns:c='http://schemas.microsoft.com/2003/10/Serialization/Arrays'>" + e + "</a:Columns>" } else f = "<a:AllColumns>true</a:AllColumns><a:Columns xmlns:b='http://schemas.microsoft.com/2003/10/Serialization/Arrays' />"; var j = ["<request i:type='a:RetrieveRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'>", "<a:Parameters xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<b:key>Target</b:key>", "<b:value i:type='a:EntityReference'>", "<a:Id>", h(b), "</a:Id>", "<a:LogicalName>", a, "</a:LogicalName>", "<a:Name i:nil='true' />", "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>ColumnSet</b:key>", "<b:value i:type='a:ColumnSet'>", f, "</b:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true' />", "<a:RequestName>Retrieve</a:RequestName>", "</request>"].join(""), k = !!d; return C(j, "Execute", !!d, function (a) { var b = v(a, "//b:value"), c = new q; return c.deserialize(b), k ? void d(c) : c }) }, K = function (a, b) { var c = ["<request i:type='a:RetrieveMultipleRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'>", "<a:Parameters xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<b:key>Query</b:key>", "<b:value i:type='a:QueryExpression'>", a, "</b:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true'/>", "<a:RequestName>RetrieveMultiple</a:RequestName>", "</request>"].join(""), d = !!b; return C(c, "Execute", d, function (a) { for (var c = v(a, "//a:Entities"), e = [], f = 0, g = c.childNodes.length; f < g; f++) { var h = new q; h.deserialize(c.childNodes[f]), e[f] = h } return d ? void b(e) : e }) }, L = function (a, b, c) { for (var d = [], e = 0, f = b.length; e < f; e++) "" !== b[e] && void 0 != b[e] && d.push(a, b[e], c); return d.join("") }, M = function (a, b) { for (var c = [], d = 0, e = a.length; d < e; d++) if ("" !== a[d]) { var f = b[d]; if (typeof f == typeof []) { c.push("<condition attribute='", a[d], "' operator='in' >"); for (var g in f) if (f.hasOwnProperty(g)) { var i = h(f[g]); c.push("<value>" + i + "</value>") } c.push("</condition>") } else "string" == typeof f && c.push("<condition attribute='", a[d], "' operator='eq' value='", h(f), "' />") } return c.join("") }, N = function (a) { return a.constructor.toString().indexOf("Array") !== -1 }, O = function (a, b) { var c = a.entityName, d = a.attributes, e = a.values, f = a.columnSet, g = a.orderBy || ""; d = N(d) ? d : [d], e = N(e) ? e : [e], g = g && N(g) ? g : [g], f = f && N(f) ? f : [f]; var h = ["<entity name='", c, "'>", L("<attribute name='", f, "' />"), L("<order attribute='", g, "' />"), "<filter>", M(d, e), "</filter>", "</entity>"].join(""); return I(h, !1, b) }, P = function (a, b) { var c = a.entityName, d = a.attributes, e = a.values, f = a.columnSet, g = a.orderBy || ""; d = N(d) ? d : [d], e = N(e) ? e : [e], g = g && N(g) ? g : [g], f = f && N(f) ? f : [f]; var h = ["<entity name='", c, "'>", L("<attribute name='", f, "' />"), L("<order attribute='", g, "' />"), "<filter>", M(d, e), "</filter>", "</entity>"].join(""), i = !!b; return I(h, !0, i) }, Q = function (a, b, c, d, f) {
		var g = ["<request i:type='b:SetStateRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts' xmlns:b='http://schemas.microsoft.com/crm/2011/Contracts'>", "<a:Parameters xmlns:c='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<c:key>EntityMoniker</c:key>", "<c:value i:type='a:EntityReference'>", "<a:Id>", h(b), "</a:Id>", "<a:LogicalName>", a, "</a:LogicalName>", "<a:Name i:nil='true' />", "</c:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<c:key>State</c:key>", "<c:value i:type='a:OptionSetValue'>", "<a:Value>", c.toString(), "</a:Value>", "</c:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<c:key>Status</c:key>", "<c:value i:type='a:OptionSetValue'>", "<a:Value>", d.toString(), "</a:Value>", "</c:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true' />", "<a:RequestName>SetState</a:RequestName>", "</request>"].join(""), i = !!f;
		return C(g, "Execute", i, function (a) { var b = w(a, "//ser:ExecuteResult"), c = e(b); return i ? void f(c) : c })
	}, R = function (a, b, c, d, f, g) { var i = f; i = N(i) ? i : [i]; for (var j = [], k = 0, l = i.length; k < l; k++) "" !== i[k].id && j.push("<a:EntityReference>", "<a:Id>", i[k].id, "</a:Id>", "<a:LogicalName>", d, "</a:LogicalName>", "<a:Name i:nil='true' />", "</a:EntityReference>"); var m = j.join(""), n = ["<request i:type='a:AssociateRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'>", "<a:Parameters xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<b:key>Target</b:key>", "<b:value i:type='a:EntityReference'>", "<a:Id>", h(c), "</a:Id>", "<a:LogicalName>", b, "</a:LogicalName>", "<a:Name i:nil='true' />", "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>Relationship</b:key>", "<b:value i:type='a:Relationship'>", "<a:PrimaryEntityRole>Referenced</a:PrimaryEntityRole>", "<a:SchemaName>", a, "</a:SchemaName>", "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>RelatedEntities</b:key>", "<b:value i:type='a:EntityReferenceCollection'>", m, "</b:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true' />", "<a:RequestName>Associate</a:RequestName>", "</request>"].join(""), o = !!g; return C(n, "Execute", o, function (a) { var b = w(a, "//ser:ExecuteResult"), c = e(b); return o ? void g(c) : c }) }, S = function (a, b, c, d, f, g) { var i = f; i = N(i) ? i : [i]; for (var j = [], k = 0, l = i.length; k < l; k++) "" !== i[k].id && j.push("<a:EntityReference>", "<a:Id>", i[k].id, "</a:Id>", "<a:LogicalName>", d, "</a:LogicalName>", "<a:Name i:nil='true' />", "</a:EntityReference>"); var m = j.join(""), n = ["<request i:type='a:DisassociateRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'>", "<a:Parameters xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<b:key>Target</b:key>", "<b:value i:type='a:EntityReference'>", "<a:Id>", h(c), "</a:Id>", "<a:LogicalName>", b, "</a:LogicalName>", "<a:Name i:nil='true' />", "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>Relationship</b:key>", "<b:value i:type='a:Relationship'>", "<a:PrimaryEntityRole i:nil='true' />", "<a:SchemaName>", a, "</a:SchemaName>", "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>RelatedEntities</b:key>", "<b:value i:type='a:EntityReferenceCollection'>", m, "</b:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true' />", "<a:RequestName>Disassociate</a:RequestName>", "</request>"].join(""), o = !!g; return C(n, "Execute", o, function (a) { var b = w(a, "//ser:ExecuteResult"), c = e(b); return o ? void g(c) : c }) }, T = function () { var a = ["<request i:type='b:WhoAmIRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts' xmlns:b='http://schemas.microsoft.com/crm/2011/Contracts'>", "<a:Parameters xmlns:c='http://schemas.datacontract.org/2004/07/System.Collections.Generic' />", "<a:RequestId i:nil='true' />", "<a:RequestName>WhoAmI</a:RequestName>", "</request>"].join(""), b = C(a, "Execute"); return x(u(b, "//b:value")[0]) }, U = function () { var a = ["<request i:type='b:WhoAmIRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts' xmlns:b='http://schemas.microsoft.com/crm/2011/Contracts'>", "<a:Parameters xmlns:c='http://schemas.datacontract.org/2004/07/System.Collections.Generic' />", "<a:RequestId i:nil='true' />", "<a:RequestName>WhoAmI</a:RequestName>", "</request>"].join(""), b = C(a, "Execute"); return x(u(b, "//b:value")[1]) }, V = function () { var a = ["<fetch version='1.0' output-format='xml-platform' mapping='logical' distinct='true'>", "<entity name='role'>", "<attribute name='name' />", "<attribute name='businessunitid' />", "<attribute name='roleid' />", "<order attribute='name' descending='false' /><link-entity name='systemuserroles' from='roleid' to='roleid' visible='false' intersect='true'>", "<link-entity name='systemuser' from='systemuserid' to='systemuserid' alias='aa'>", "<filter type='and'>", "<condition attribute='systemuserid' operator='eq-userid' />", "</filter>", "</link-entity>", "</link-entity>", "</entity>", "</fetch>"].join(""), b = I(a), c = []; if (null !== b && "undefined" != typeof b) for (var d = 0, e = b.length; d < e; d++) c[d] = b[d].attributes.name.value; return c }, W = function () { for (var a = V(), b = 0, c = a.length; b < c; b++) for (var d = 0, e = arguments.length; d < e; d++) if (a[b] === arguments[d]) return !0; return !1 }, X = function (a, b, c, d, f) { var g = ["<request i:type='b:AssignRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts' xmlns:b='http://schemas.microsoft.com/crm/2011/Contracts'>", "<a:Parameters xmlns:c='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<c:key>Target</c:key>", "<c:value i:type='a:EntityReference'>", "<a:Id>", h(b), "</a:Id>", "<a:LogicalName>", a, "</a:LogicalName>", "<a:Name i:nil='true' />", "</c:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<c:key>Assignee</c:key>", "<c:value i:type='a:EntityReference'>", "<a:Id>", h(d), "</a:Id>", "<a:LogicalName>", c, "</a:LogicalName>", "<a:Name i:nil='true' />", "</c:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true' />", "<a:RequestName>Assign</a:RequestName>", "</request>"].join(""), i = !!f; return C(g, "Execute", i, function (a) { var b = w(a, "//ser:ExecuteResult"), c = e(b); return i ? void f(c) : c }) }, Y = function (a, b) { var c = a.targetEntityName, d = a.targetEntityId, f = a.principalEntityName, g = a.principalEntityId, i = a.accessRights; i = N(i) ? i : [i]; for (var j = "", k = 0, l = i.length; k < l; k++) j += h(i[k]) + " "; var m = ["<request i:type='b:GrantAccessRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts' xmlns:b='http://schemas.microsoft.com/crm/2011/Contracts'>", "<a:Parameters xmlns:c='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<c:key>Target</c:key>", "<c:value i:type='a:EntityReference'>", "<a:Id>", h(d), "</a:Id>", "<a:LogicalName>", c, "</a:LogicalName>", "<a:Name i:nil='true' />", "</c:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<c:key>PrincipalAccess</c:key>", "<c:value i:type='b:PrincipalAccess'>", "<b:AccessMask>", j, "</b:AccessMask>", "<b:Principal>", "<a:Id>", h(g), "</a:Id>", "<a:LogicalName>", f, "</a:LogicalName>", "<a:Name i:nil='true' />", "</b:Principal>", "</c:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true' />", "<a:RequestName>GrantAccess</a:RequestName>", "</request>"].join(""), n = !!b; return C(m, "Execute", n, function (a) { var c = w(a, "//ser:ExecuteResult"), d = e(c); return n ? void b(d) : d }) }, Z = function (a, b) { var c = a.targetEntityName, d = a.targetEntityId, f = a.principalEntityName, g = a.principalEntityId, i = a.accessRights; i = N(i) ? i : [i]; for (var j = "", k = 0, l = i.length; k < l; k++) j += h(i[k]) + " "; var m = ["<request i:type='b:ModifyAccessRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts' xmlns:b='http://schemas.microsoft.com/crm/2011/Contracts'>", "<a:Parameters xmlns:c='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<c:key>Target</c:key>", "<c:value i:type='a:EntityReference'>", "<a:Id>", h(d), "</a:Id>", "<a:LogicalName>", c, "</a:LogicalName>", "<a:Name i:nil='true' />", "</c:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<c:key>PrincipalAccess</c:key>", "<c:value i:type='b:PrincipalAccess'>", "<b:AccessMask>", j, "</b:AccessMask>", "<b:Principal>", "<a:Id>", h(g), "</a:Id>", "<a:LogicalName>", f, "</a:LogicalName>", "<a:Name i:nil='true' />", "</b:Principal>", "</c:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true' />", "<a:RequestName>ModifyAccess</a:RequestName>", "</request>"].join(""), n = !!b; return C(m, "Execute", n, function (a) { var c = w(a, "//ser:ExecuteResult"), d = e(c); return n ? void b(d) : d }) }, $ = function (a, b) { var c = a.targetEntityName, d = a.targetEntityId, f = a.revokeeEntityName, g = a.revokeeEntityId, i = ["<request i:type='b:RevokeAccessRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts' xmlns:b='http://schemas.microsoft.com/crm/2011/Contracts'>", "<a:Parameters xmlns:c='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<c:key>Target</c:key>", "<c:value i:type='a:EntityReference'>", "<a:Id>", h(d), "</a:Id>", "<a:LogicalName>", c, "</a:LogicalName>", "<a:Name i:nil='true' />", "</c:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<c:key>Revokee</c:key>", "<c:value i:type='a:EntityReference'>", "<a:Id>", h(g), "</a:Id>", "<a:LogicalName>", f, "</a:LogicalName>", "<a:Name i:nil='true' />", "</c:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true' />", "<a:RequestName>RevokeAccess</a:RequestName>", "</request>"].join(""), j = !!b; return C(i, "Execute", j, function (a) { var c = w(a, "//ser:ExecuteResult"), d = e(c); return j ? void b(d) : d }) }, _ = function (a, b) { var c = a.targetEntityName, d = a.targetEntityId, e = a.principalEntityName, f = a.principalEntityId, g = ["<request i:type='b:RetrievePrincipalAccessRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts' xmlns:b='http://schemas.microsoft.com/crm/2011/Contracts'>", "<a:Parameters xmlns:c='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<c:key>Target</c:key>", "<c:value i:type='a:EntityReference'>", "<a:Id>", h(d), "</a:Id>", "<a:LogicalName>", c, "</a:LogicalName>", "<a:Name i:nil='true' />", "</c:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<c:key>Principal</c:key>", "<c:value i:type='a:EntityReference'>", "<a:Id>", h(f), "</a:Id>", "<a:LogicalName>", e, "</a:LogicalName>", "<a:Name i:nil='true' />", "</c:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true' />", "<a:RequestName>RetrievePrincipalAccess</a:RequestName>", "</request>"].join(""), i = !!b; return C(g, "Execute", i, function (a) { var c = w(a, "//b:value"); return i ? void b(c) : c }) }, aa = ["Attributes", "ManyToManyRelationships", "ManyToOneRelationships", "OneToManyRelationships", "Privileges", "LocalizedLabels", "Options", "Targets"], ba = function (a) { for (var b = 0, c = aa.length; b < c; b++) if (a === aa[b]) return !0; return !1 }, ca = function (a) { return "undefined" != typeof a.baseName ? a.baseName : a.localName }, da = function (a) { if (null != a.attributes && 1 === a.attributes.length && null != a.attributes.getNamedItem("i:nil") && "true" === a.attributes.getNamedItem("i:nil").nodeValue) return null; if (null != a.firstChild && 3 === a.firstChild.nodeType) { var b = ca(a); switch (b) { case "ActivityTypeMask": case "ObjectTypeCode": case "ColumnNumber": case "DefaultFormValue": case "MaxValue": case "MinValue": case "MaxLength": case "Order": case "Precision": case "PrecisionSource": case "LanguageCode": return parseInt(a.firstChild.nodeValue, 10); case "AutoRouteToOwnerQueue": case "CanBeChanged": case "CanTriggerWorkflow": case "IsActivity": case "IsActivityParty": case "IsAvailableOffline": case "IsChildEntity": case "IsCustomEntity": case "IsCustomOptionSet": case "IsDocumentManagementEnabled": case "IsEnabledForCharts": case "IsGlobal": case "IsImportable": case "IsIntersect": case "IsManaged": case "IsReadingPaneEnabled": case "IsValidForAdvancedFind": case "CanBeSecuredForCreate": case "CanBeSecuredForRead": case "CanBeSecuredForUpdate": case "IsCustomAttribute": case "IsPrimaryId": case "IsPrimaryName": case "IsSecured": case "IsValidForCreate": case "IsValidForRead": case "IsValidForUpdate": case "IsCustomRelationship": case "CanBeBasic": case "CanBeDeep": case "CanBeGlobal": case "CanBeLocal": return "true" === a.firstChild.nodeValue; case "Value": return "true" === a.firstChild.nodeValue || "false" === a.firstChild.nodeValue ? "true" === a.firstChild.nodeValue : "ApplicationRequired" === a.firstChild.nodeValue || "None" === a.firstChild.nodeValue || "Recommended" === a.firstChild.nodeValue || "SystemRequired" === a.firstChild.nodeValue ? a.firstChild.nodeValue : parseInt(a.firstChild.nodeValue, 10); default: return a.firstChild.nodeValue } } if (ba(ca(a))) { for (var c = [], d = 0, e = a.childNodes.length; d < e; d++) { var f; f = null != a.childNodes[d].attributes && null != a.childNodes[d].attributes.getNamedItem("i:type") ? a.childNodes[d].attributes.getNamedItem("i:type").nodeValue.split(":")[1] : ca(a.childNodes[d]); var g = da(a.childNodes[d]); g._type = f, c.push(g) } return c } if (0 === a.childNodes.length) return null; var h = {}; null != a.attributes.getNamedItem("i:type") && (h._type = a.attributes.getNamedItem("i:type").nodeValue.split(":")[1]); for (var i = 0, j = a.childNodes.length; i < j; i++) 3 === a.childNodes[i].nodeType ? h[ca(a.childNodes[i])] = a.childNodes[i].nodeValue : h[ca(a.childNodes[i])] = da(a.childNodes[i]); return h }, ea = function (a, b, c) { a = N(a) ? a : [a]; for (var d = "", e = 0, f = a.length; e < f; e++) d += h(a[e]) + " "; var g = ['<request i:type="a:RetrieveAllEntitiesRequest" xmlns:a="http://schemas.microsoft.com/xrm/2011/Contracts">', '<a:Parameters xmlns:b="http://schemas.datacontract.org/2004/07/System.Collections.Generic">', "<a:KeyValuePairOfstringanyType>", "<b:key>EntityFilters</b:key>", '<b:value i:type="c:EntityFilters" xmlns:c="http://schemas.microsoft.com/xrm/2011/Metadata">' + h(d) + "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>RetrieveAsIfPublished</b:key>", '<b:value i:type="c:boolean" xmlns:c="http://www.w3.org/2001/XMLSchema">' + h(b.toString()) + "</b:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", '<a:RequestId i:nil="true" />', "<a:RequestName>RetrieveAllEntities</a:RequestName>", "</request>"].join(""), i = !!c; return C(g, "Execute", i, function (a) { for (var b = u(a, "//c:EntityMetadata"), d = [], e = 0, f = b.length; e < f; e++) { var g = da(b[e]); g._type = "EntityMetadata", d.push(g) } return i ? void c(d) : d }) }, fa = function (a, b, c, d) { a = N(a) ? a : [a]; for (var e = "", f = 0, g = a.length; f < g; f++) e += h(a[f]) + " "; var i = ['<request i:type="a:RetrieveEntityRequest" xmlns:a="http://schemas.microsoft.com/xrm/2011/Contracts">', '<a:Parameters xmlns:b="http://schemas.datacontract.org/2004/07/System.Collections.Generic">', "<a:KeyValuePairOfstringanyType>", "<b:key>EntityFilters</b:key>", '<b:value i:type="c:EntityFilters" xmlns:c="http://schemas.microsoft.com/xrm/2011/Metadata">', h(e), "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>MetadataId</b:key>", '<b:value i:type="c:guid"  xmlns:c="http://schemas.microsoft.com/2003/10/Serialization/">', h("00000000-0000-0000-0000-000000000000"), "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>RetrieveAsIfPublished</b:key>", '<b:value i:type="c:boolean" xmlns:c="http://www.w3.org/2001/XMLSchema">', h(c.toString()), "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>LogicalName</b:key>", '<b:value i:type="c:string" xmlns:c="http://www.w3.org/2001/XMLSchema">', h(b), "</b:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", '<a:RequestId i:nil="true" />', "<a:RequestName>RetrieveEntity</a:RequestName>", "</request>"].join(""), j = !!d; return C(i, "Execute", j, function (a) { for (var b = u(a, "//b:value"), c = [], e = 0, f = b.length; e < f; e++) { var g = da(b[e]); g._type = "EntityMetadata", c.push(g) } return j ? void d(c) : c }) }, ga = function (a, b, c, d) { var e = ['<request i:type="a:RetrieveAttributeRequest" xmlns:a="http://schemas.microsoft.com/xrm/2011/Contracts">', '<a:Parameters xmlns:b="http://schemas.datacontract.org/2004/07/System.Collections.Generic">', "<a:KeyValuePairOfstringanyType>", "<b:key>EntityLogicalName</b:key>", '<b:value i:type="c:string" xmlns:c="http://www.w3.org/2001/XMLSchema">', h(a), "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>MetadataId</b:key>", '<b:value i:type="ser:guid"  xmlns:ser="http://schemas.microsoft.com/2003/10/Serialization/">', h("00000000-0000-0000-0000-000000000000"), "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>RetrieveAsIfPublished</b:key>", '<b:value i:type="c:boolean" xmlns:c="http://www.w3.org/2001/XMLSchema">', h(c.toString()), "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>LogicalName</b:key>", '<b:value i:type="c:string"   xmlns:c="http://www.w3.org/2001/XMLSchema">', h(b), "</b:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", '<a:RequestId i:nil="true" />', "<a:RequestName>RetrieveAttribute</a:RequestName>", "</request>"].join(""), f = !!d; return C(e, "Execute", f, function (a) { for (var b = u(a, "//b:value"), c = [], e = 0, g = b.length; e < g; e++) { var h = da(b[e]); c.push(h) } return f ? void d(c) : c }) }; return { BusinessEntity: q, Execute: G, Fetch: I, Retrieve: J, RetrieveMultiple: K, Create: D, Update: E, Delete: F, QueryByAttribute: O, QueryAll: P, SetState: Q, Associate: R, Disassociate: S, Assign: X, RetrievePrincipalAccess: _, GrantAccess: Y, ModifyAccess: Z, RevokeAccess: $, GetCurrentUserId: T, GetCurrentUserBusinessUnitId: U, GetCurrentUserRoles: V, IsCurrentUserRole: W, RetrieveAllEntitiesMetadata: ea, RetrieveEntityMetadata: fa, RetrieveAttributeMetadata: ga }
}(), XrmServiceToolkit.Extension = function () { var a = function (a) { void 0 !== Xrm.Utility && void 0 !== Xrm.Utility.alertDialog ? Xrm.Utility.alertDialog(a) : alert(a) }, b = function () { var a; if ("undefined" != typeof window.GetGlobalContext) a = window.GetGlobalContext(); else if ("undefined" != typeof GetGlobalContext) a = GetGlobalContext(); else if ("undefined" != typeof Xrm) a = Xrm.Page.context; else { if ("undefined" == typeof window.parent.Xrm) throw new Error("Context is not available."); a = window.parent.Xrm.Page.context } return a }, c = function () { var a = "undefined" != typeof b().getClientUrl ? b().getClientUrl() : b().getServerUrl(); return a.match(/\/$/) && (a = a.substring(0, a.length - 1)), a }, d = function (b, d) { function f(a, b, c) { var e = jQuery("#" + b + "_c").children(":first"); if (null != e) { var f = '<img id="img_' + b + '" src="/_imgs/ico/16_help.gif" alt="' + c + '" width="16" height="16" /><div id="help_' + b + '" style="visibility: hidden; position: absolute;">: ' + c + "</div>"; jQuery(e).append(f), jQuery("#img_" + b).css("display", d ? "inline" : "none") } } function g(a) { var b = Xrm.Page.data.entity.getEntityName().toString().toLowerCase(), c = jQuery("entity[name=" + b + "]", a); jQuery(c).children().each(function () { var a = jQuery(this).attr("name"), c = jQuery(this).find("shorthelp").text(); f(b, a, c) }) } if (void 0 !== Xrm.Page.ui.setFormNotification) return void a("XrmServiceToolkit.Extension.JQueryXrmFieldTooltip is not supported in CRM2013.\nPlease use the out of box functionality"); if ("undefined" == typeof jQuery) { var e = "jQuery is not loaded.\nPlease ensure that jQuery is included\n as web resource in the form load."; return void a(e) } jQuery.support.cors = !0, jQuery.ajax({ type: "GET", url: c() + "/WebResources/" + b, dataType: "xml", success: g, error: function (b, c, d) { a("Something is wrong to setup the tooltip for the fields. Please contact your administrator") } }) }, e = function (b) { function d(a, b, c) { for (var d in c.config) if (c.config.hasOwnProperty(d)) { var e = c.config[d]; if (e.parent === a && e.dependent === b) { var k, l, f = Xrm.Page.data.entity.attributes.get(a), g = Xrm.Page.data.entity.attributes.get(b), h = Xrm.Page.getControl(a), i = Xrm.Page.getControl(b), j = g.getValue(); if (null === f.getValue()) { g.setValue(null), g.setSubmitMode("always"), g.fireOnChange(), k = g.controls.get(); for (l in k) k.hasOwnProperty(l) && k[l].setDisabled(!0); return } for (var m in e.options) if (e.options.hasOwnProperty(m)) { var n = e.options[m], o = n.showOptions; if (f.getValue().toString() === n.value.toString()) { k = g.controls.get(); for (l in k) if (k.hasOwnProperty(l)) { k[l].setDisabled(!1), k[l].clearOptions(); for (var p in o) o.hasOwnProperty(p) && k[l].addOption(o[p]) } var q = !1, r = o; for (var s in r) if (r.hasOwnProperty(s)) { var t = r[s].value; if (j === parseInt(t)) { q = !0; break } } q ? g.setValue(j) : g.setValue(null), g.setSubmitMode("always"), g.fireOnChange(), h.getDisabled() === !0 && i.setDisabled(!0); break } } } } } function f(a) { for (var b = Xrm.Page.data.entity.getEntityName().toString().toLowerCase(), c = jQuery("entity[name=" + b + "]", a), f = c.children("ParentField"), g = [], h = 0, i = f.length; h < i; h++) { var j = f[h], k = {}; k.parent = jQuery(j).attr("id"), k.dependent = jQuery(j).children("DependentField:first").attr("id"), k.options = []; for (var l = jQuery(j).children("Option"), m = 0, n = l.length; m < n; m++) { var o = {}; o.value = jQuery(l[m]).attr("value"), o.showOptions = []; for (var p = jQuery(l[m]).children("ShowOption"), q = 0, r = p.length; q < r; q++) { var s = {}; s.value = jQuery(p[q]).attr("value"), s.text = jQuery(p[q]).attr("label"), o.showOptions.push(s) } k.options.push(o) } g.push(k) } e.config = g; for (var t in e.config) if (e.config.hasOwnProperty(t)) { var u = e.config[t].parent, v = e.config[t].dependent; d(u, v, e) } } return "undefined" == typeof jQuery ? void a("jQuery is not loaded.\nPlease ensure that jQuery is included\n as web resource in the form load.") : (jQuery.support.cors = !0, void jQuery.ajax({ type: "GET", url: c() + "/WebResources/" + b, dataType: "xml", success: f, error: function (b, c, d) { a("Something is wrong to setup the dependent picklist. Please contact your administrator") } })) }, f = function (b) { function d(a, b, c, d, e) { var f = "{1DFB2B35-B07C-44D1-868D-258DEEAB88E2}"; Xrm.Page.getControl(a).addCustomView(f, b, c, d, e, !0) } function e(b) { var c = ""; try { null != b && ("undefined" != typeof XMLSerializer && "undefined" == typeof b.xml ? c = (new XMLSerializer).serializeToString(b) : "undefined" != typeof b.xml ? c = b.xml : "undefined" != typeof b[0].xml && (c = b[0].xml)) } catch (b) { a("Cannot convert the XML to a string.") } return c } function g(b) { for (var c = Xrm.Page.data.entity.getEntityName().toString().toLowerCase(), g = jQuery("entity[name=" + c + "]", b), h = g.children("TargetField"), i = [], j = 0, k = h.length; j < k; j++) { var l = h[j], m = {}; m.target = jQuery(l).attr("id"), m.entityName = jQuery(l).attr("viewentity"), m.viewName = jQuery(l).attr("viewname"), m.dynamic = jQuery(l).children("dynamic").children(), m.fetchXml = e(jQuery(l).children("fetch")), m.layoutXml = e(jQuery(l).children("grid")), i.push(m) } f.config = i; for (var n in f.config) if (f.config.hasOwnProperty(n)) { var o = f.config[n].target, p = f.config[n].entityName, q = f.config[n].viewName, r = f.config[n].dynamic, s = f.config[n].fetchXml, t = f.config[n].layoutXml; if (null != r) for (var u = 0, v = r.length; u < v; u++) { var w = Xrm.Page.getControl(jQuery(r).attr("name")).getControlType(), x = jQuery(r).attr("fieldvaluetype"); if (null === Xrm.Page.getAttribute(jQuery(r).attr("name")).getValue()) return void a(jQuery(r).attr("name") + " does not have a value. Please put validation logic on the field change to call this function. Only use XrmServiceToolkit.Extension.JQueryXrmCustomFilterView when the field has a value."); var y = null; switch (w) { case "standard": y = Xrm.Page.getAttribute(jQuery(r).attr("name")).getValue(); break; case "optionset": y = null != x && "label" === x ? Xrm.Page.getAttribute(jQuery(r).attr("name")).getSelectionOption().text : Xrm.Page.getAttribute(jQuery(r).attr("name")).getValue(); break; case "lookup": y = null != x && "name" === x ? Xrm.Page.getAttribute(jQuery(r).attr("name")).getValue()[0].name : Xrm.Page.getAttribute(jQuery(r).attr("name")).getValue()[0].id; break; default: a(jQuery(r).attr("name") + " is not supported for filter lookup view. Please change the configuration.") } var z = jQuery(r).attr("operator"); if (null === z) return void a("operator is missing in the configuration file. Please fix the issue"); var A = jQuery(r).attr("fetchnote"); switch (z.toLowerCase()) { case "contains": case "does not contain": y = "%" + y + "%"; break; case "begins with": case "does not begin with": y += "%"; break; case "ends with": case "does not end with": y = "%" + y } s = s.replace(A, y) } d(o, p, q, s, t) } } return "undefined" == typeof jQuery ? void a("jQuery is not loaded.\nPlease ensure that jQuery is included\n as web resource in the form load.") : (jQuery.support.cors = !0, void jQuery.ajax({ type: "GET", url: c() + "/WebResources/" + b, dataType: "xml", success: g, error: function (b, c, d) { a("Something is wrong to setup the custom filter view. Please contact your administrator") } })) }, g = function (b, c) { if (void 0 !== Xrm.Page.ui.setFormNotification) return void a("XrmServiceToolkit.Extension.JQueryXrmFormatNotesControl is not supported in CRM2013"); if ("undefined" == typeof jQuery) return void a("jQuery is not loaded.\nPlease ensure that jQuery is included\n as web resource in the form load."); jQuery.support.cors = !0; var d = jQuery("#notescontrol"); if (null !== d && void 0 !== d) { var e = d.attr("url"); if (null != e) b ? c || (e = e.replace("EnableInlineEdit=true", "EnableInlineEdit=false")) : e = e.replace("EnableInsert=true", "EnableInsert=false"), d.attr("url", e); else { var f = d.attr("src"); null != f && (b ? c || (f = f.replace("EnableInlineEdit=true", "EnableInlineEdit=false")) : f = f.replace("EnableInsert=true", "EnableInsert=false"), d.attr("src", f)) } } }; return { JQueryXrmFieldTooltip: d, JQueryXrmDependentOptionSet: e, JQueryXrmCustomFilterView: f, JQueryXrmFormatNotesControl: g } }();